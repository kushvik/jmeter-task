<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.0 r1840935">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1281132211000</longProp>
        <longProp name="ThreadGroup.end_time">1281132211000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
          <stringProp name="CookieManager.policy">rfc2109</stringProp>
        </CookieManager>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="VIEWSTATE" elementType="Argument">
              <stringProp name="Argument.name">VIEWSTATE</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="jsessionid" elementType="Argument">
              <stringProp name="Argument.name">jsessionid</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">User-Agent</stringProp>
              <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.2; WOW64; Trident/7.0; rv:11.0) like Gecko</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">image/gif, image/jpeg, image/pjpeg, application/x-ms-application, application/xaml+xml, application/x-ms-xbap, */*</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept-Language</stringProp>
              <stringProp name="Header.value">en-IN</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Step 1" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://twitter.com/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">twitter.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://twitter.com/login" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">twitter.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/login</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://twitter.com/login" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">twitter.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/login</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://twitter.com/sessions" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="session[username_or_email]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">kushwahvikas27@gmail.com</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">session[username_or_email]</stringProp>
                </elementProp>
                <elementProp name="session[password]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">loveyans@</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">session[password]</stringProp>
                </elementProp>
                <elementProp name="authenticity_token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">db1965f5e15ef1367d1ea58e186f9ec21b2788ca</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">authenticity_token</stringProp>
                </elementProp>
                <elementProp name="ui_metrics" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">{&quot;rf&quot;:{&quot;a8354589e8a85cc73040049d3dc6be484fbb1b1c1d71b0270c3faa136119d1d9&quot;:164,&quot;ded2d99f0a7f04f759736ae91fc884a220b117124b252d60b68da0e71d480851&quot;:149,&quot;a7585291c8c00f8a65f5c6cee7308c747514deab5df3ce530730448ba67fc72d&quot;:-1,&quot;a0c35b972d2495075d093c2301cda350cf1a17a33c6b4c624f0e66cabc3981f0&quot;:22},&quot;s&quot;:&quot;igdtC3g1QDs2GZndswHl4bluZ8nOz4aiSRnMIFx80eReKPUHkIxHeVkv4XYu4tFKOOb1UTf80NELmVWNNtOjerch0r_fXUXDl6h4HqmAHy4WULzTWPiKN6uGL5WYMwCDKQiGwVVJ_LtCqUEVmkqBoL87VkW6c0TcCL_XuPiI62YFzpGv5lDK2aqMlPbPMaWLTy7EPII7g0rt8tkq3akGBIL7QdxHokHcUZMPkK9zSW-LKi-K7z46QSi7pD_SunFbu2zoBhOMyp9zISJLUp0e-O6F5_obKCBaQpIhrQJ49_q0HIv2zF3ckydaROqCrHPK1-WaFeJi-40tPT9SZ0vfoAAAAWcSD86W&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">ui_metrics</stringProp>
                </elementProp>
                <elementProp name="scribe_log" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">scribe_log</stringProp>
                </elementProp>
                <elementProp name="redirect_after_login" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">redirect_after_login</stringProp>
                </elementProp>
                <elementProp name="authenticity_token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">db1965f5e15ef1367d1ea58e186f9ec21b2788ca</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">authenticity_token</stringProp>
                </elementProp>
                <elementProp name="remember_me" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">remember_me</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">twitter.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/sessions</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname=":///i/search/typeahead.json" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="count" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">1200</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">count</stringProp>
                </elementProp>
                <elementProp name="media_tagging_in_prefetch" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">media_tagging_in_prefetch</stringProp>
                </elementProp>
                <elementProp name="prefetch" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">prefetch</stringProp>
                </elementProp>
                <elementProp name="result_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">users</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">result_type</stringProp>
                </elementProp>
                <elementProp name="users_cache_age" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">users_cache_age</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port">80</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/i/search/typeahead.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname=":///i/search/typeahead.json" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="count" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">1200</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">count</stringProp>
                </elementProp>
                <elementProp name="media_tagging_in_prefetch" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">media_tagging_in_prefetch</stringProp>
                </elementProp>
                <elementProp name="prefetch" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">prefetch</stringProp>
                </elementProp>
                <elementProp name="result_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">users</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">result_type</stringProp>
                </elementProp>
                <elementProp name="users_cache_age" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">users_cache_age</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port">80</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/i/search/typeahead.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname=":///i/search/typeahead.json" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="count" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">1200</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">count</stringProp>
                </elementProp>
                <elementProp name="media_tagging_in_prefetch" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">media_tagging_in_prefetch</stringProp>
                </elementProp>
                <elementProp name="prefetch" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">prefetch</stringProp>
                </elementProp>
                <elementProp name="result_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">users</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">result_type</stringProp>
                </elementProp>
                <elementProp name="users_cache_age" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">users_cache_age</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port">80</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/i/search/typeahead.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname=":///i/trends" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="k" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">7fdbae39f9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">k</stringProp>
                </elementProp>
                <elementProp name="pc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">pc</stringProp>
                </elementProp>
                <elementProp name="show_context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">show_context</stringProp>
                </elementProp>
                <elementProp name="src" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">module</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">src</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port">80</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/i/trends</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname=":///i/users/prompts" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="format" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">HomeTimeline</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">format</stringProp>
                </elementProp>
                <elementProp name="tweet_ids" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">1062461291955138561,1062450375079399424,1062445430716485632</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">tweet_ids</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port">80</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/i/users/prompts</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname=":///i/promoted_content/log.json" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="authenticity_token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">db1965f5e15ef1367d1ea58e186f9ec21b2788ca</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">authenticity_token</stringProp>
                </elementProp>
                <elementProp name="event" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">impression</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">event</stringProp>
                </elementProp>
                <elementProp name="impression_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">908063af24479f8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">impression_id</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port">80</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/i/promoted_content/log.json</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname=":///i/users/recommendations" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="connections" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">connections</stringProp>
                </elementProp>
                <elementProp name="disabled" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">disabled</stringProp>
                </elementProp>
                <elementProp name="dismissable" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">dismissable</stringProp>
                </elementProp>
                <elementProp name="display_location" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">wtf-component</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">display_location</stringProp>
                </elementProp>
                <elementProp name="excluded" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">excluded</stringProp>
                </elementProp>
                <elementProp name="initialResults" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">initialResults</stringProp>
                </elementProp>
                <elementProp name="limit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">limit</stringProp>
                </elementProp>
                <elementProp name="oldest_unread_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">oldest_unread_id</stringProp>
                </elementProp>
                <elementProp name="pc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">pc</stringProp>
                </elementProp>
                <elementProp name="scribeContext[component]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">user_recommendations</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">scribeContext[component]</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port">80</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/i/users/recommendations</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname=":///i/promoted_content/log.json" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="authenticity_token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">db1965f5e15ef1367d1ea58e186f9ec21b2788ca</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">authenticity_token</stringProp>
                </elementProp>
                <elementProp name="event" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">impression</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">event</stringProp>
                </elementProp>
                <elementProp name="impression_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">908063af24479f8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">impression_id</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port">80</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/i/promoted_content/log.json</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname=":///i/promoted_content/log.json" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="authenticity_token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">db1965f5e15ef1367d1ea58e186f9ec21b2788ca</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">authenticity_token</stringProp>
                </elementProp>
                <elementProp name="event" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">impression</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">event</stringProp>
                </elementProp>
                <elementProp name="impression_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">908063af24479f8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">impression_id</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port">80</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/i/promoted_content/log.json</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname=":///i/users/prompts/impress" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="authenticity_token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">db1965f5e15ef1367d1ea58e186f9ec21b2788ca</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">authenticity_token</stringProp>
                </elementProp>
                <elementProp name="prompt_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">2419</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">prompt_id</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port">80</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/i/users/prompts/impress</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname=":///i/jot" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="log" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">[{&quot;internal_referer&quot;:null,&quot;client_version&quot;:&quot;macaw-swift&quot;,&quot;user_id&quot;:0,&quot;event_namespace&quot;:{&quot;client&quot;:&quot;web&quot;,&quot;page&quot;:&quot;front&quot;,&quot;section&quot;:&quot;front&quot;,&quot;action&quot;:&quot;show&quot;},&quot;triggered_on&quot;:1542196268134,&quot;format_version&quot;:2,&quot;_category_&quot;:&quot;client_event&quot;},{&quot;internal_referer&quot;:&quot;/&quot;,&quot;client_version&quot;:&quot;macaw-swift&quot;,&quot;user_id&quot;:0,&quot;event_namespace&quot;:{&quot;client&quot;:&quot;web&quot;,&quot;page&quot;:&quot;login&quot;,&quot;section&quot;:&quot;login&quot;,&quot;action&quot;:&quot;show&quot;},&quot;triggered_on&quot;:1542196287118,&quot;format_version&quot;:2,&quot;_category_&quot;:&quot;client_event&quot;},{&quot;internal_referer&quot;:&quot;/&quot;,&quot;client_version&quot;:&quot;macaw-swift&quot;,&quot;user_id&quot;:0,&quot;event_namespace&quot;:{&quot;client&quot;:&quot;web&quot;,&quot;page&quot;:&quot;login&quot;,&quot;section&quot;:&quot;login&quot;,&quot;component&quot;:&quot;login_callout&quot;,&quot;element&quot;:&quot;form&quot;,&quot;action&quot;:&quot;login_click&quot;,&quot;gaEvent&quot;:&quot;existing_user_signin&quot;},&quot;triggered_on&quot;:1542196308563,&quot;format_version&quot;:2,&quot;_category_&quot;:&quot;client_event&quot;},{&quot;internal_referer&quot;:&quot;/login&quot;,&quot;client_version&quot;:&quot;macaw-swift&quot;,&quot;event_namespace&quot;:{&quot;client&quot;:&quot;web&quot;,&quot;page&quot;:&quot;home&quot;,&quot;section&quot;:&quot;home&quot;,&quot;component&quot;:&quot;user_recommendations&quot;,&quot;element&quot;:&quot;wtf_import_prompt&quot;,&quot;action&quot;:&quot;impression&quot;},&quot;triggered_on&quot;:1542196321332,&quot;format_version&quot;:2,&quot;_category_&quot;:&quot;client_event&quot;},{&quot;internal_referer&quot;:&quot;/login&quot;,&quot;client_version&quot;:&quot;macaw-swift&quot;,&quot;event_namespace&quot;:{&quot;client&quot;:&quot;web&quot;,&quot;page&quot;:&quot;home&quot;,&quot;section&quot;:&quot;home&quot;,&quot;element&quot;:&quot;geo_picker&quot;,&quot;action&quot;:&quot;off&quot;},&quot;triggered_on&quot;:1542196321347,&quot;format_version&quot;:2,&quot;_category_&quot;:&quot;client_event&quot;},{&quot;internal_referer&quot;:&quot;/login&quot;,&quot;client_version&quot;:&quot;macaw-swift&quot;,&quot;event_namespace&quot;:{&quot;client&quot;:&quot;web&quot;,&quot;page&quot;:&quot;home&quot;,&quot;section&quot;:&quot;home&quot;,&quot;component&quot;:&quot;tweet_box&quot;,&quot;element&quot;:&quot;geo_picker&quot;,&quot;action&quot;:&quot;incident_reset&quot;},&quot;triggered_on&quot;:1542196321347,&quot;format_version&quot;:2,&quot;_category_&quot;:&quot;client_event&quot;},{&quot;internal_referer&quot;:&quot;/login&quot;,&quot;client_version&quot;:&quot;macaw-swift&quot;,&quot;event_namespace&quot;:{&quot;client&quot;:&quot;web&quot;,&quot;page&quot;:&quot;home&quot;,&quot;section&quot;:&quot;home&quot;,&quot;action&quot;:&quot;show&quot;},&quot;triggered_on&quot;:1542196322161,&quot;format_version&quot;:2,&quot;_category_&quot;:&quot;client_event&quot;},{&quot;internal_referer&quot;:&quot;/login&quot;,&quot;client_version&quot;:&quot;macaw-swift&quot;,&quot;items&quot;:[{&quot;cursor&quot;:0,&quot;id&quot;:&quot;113419517&quot;,&quot;item_type&quot;:3,&quot;position&quot;:7,&quot;suggestion_details&quot;:{&quot;suggestion_type&quot;:&quot;WhoToFollow&quot;,&quot;source_data&quot;:&quot;DAABCgAB8yCcGiSrQwYKAAKhS07LI5VRAgAIAAIAAAB1CAADAAAAJwA=&quot;}},{&quot;cursor&quot;:1,&quot;id&quot;:&quot;135421739&quot;,&quot;item_type&quot;:3,&quot;position&quot;:7,&quot;suggestion_details&quot;:{&quot;suggestion_type&quot;:&quot;WhoToFollow&quot;,&quot;source_data&quot;:&quot;DAABCgAB8yCcGiSrQwYKAAKhS07LI5VRAgAIAAIAAAB1CAADAAAAJwA=&quot;}}],&quot;event_namespace&quot;:{&quot;client&quot;:&quot;web&quot;,&quot;page&quot;:&quot;home&quot;,&quot;section&quot;:&quot;home&quot;,&quot;component&quot;:&quot;suggest_who_to_follow&quot;,&quot;action&quot;:&quot;results&quot;},&quot;triggered_on&quot;:1542196323885,&quot;format_version&quot;:2,&quot;_category_&quot;:&quot;client_event&quot;},{&quot;internal_referer&quot;:&quot;/login&quot;,&quot;client_version&quot;:&quot;macaw-swift&quot;,&quot;woeid&quot;:0,&quot;referring_event&quot;:&quot;initial&quot;,&quot;items&quot;:[{&quot;name&quot;:&quot;#OPPOF9Pro&quot;,&quot;item_type&quot;:8,&quot;item_query&quot;:&quot;#OPPOF9Pro&quot;,&quot;position&quot;:0,&quot;id&quot;:&quot;-652527767436083369&quot;,&quot;promoted_id&quot;:60314},{&quot;name&quot;:&quot;#ChildrensDay&quot;,&quot;item_type&quot;:8,&quot;item_query&quot;:&quot;#ChildrensDay&quot;,&quot;position&quot;:1,&quot;token&quot;:&quot;:tailored_request:hashtag_trend:taxi_worldwide_source:tweet_count_100000_1000000_metadescription:&quot;,&quot;id&quot;:&quot;-652527767436083369&quot;},{&quot;name&quot;:&quot;Stan Lee&quot;,&quot;item_type&quot;:8,&quot;item_query&quot;:&quot;Stan Lee&quot;,&quot;position&quot;:2,&quot;token&quot;:&quot;:tailored_request:entity_trend:taxi_region_source:tweet_count_1000000_10000000_metadescription:&quot;,&quot;id&quot;:&quot;-652527767436083369&quot;},{&quot;name&quot;:&quot;#JawaharlalNehru&quot;,&quot;item_type&quot;:8,&quot;item_query&quot;:&quot;#JawaharlalNehru&quot;,&quot;position&quot;:3,&quot;token&quot;:&quot;:tailored_request:hashtag_trend:taxi_worldwide_source:tweet_count_10000_100000_metadescription:&quot;,&quot;id&quot;:&quot;-652527767436083369&quot;},{&quot;name&quot;:&quot;Rahul Gandhi&quot;,&quot;item_type&quot;:8,&quot;item_query&quot;:&quot;Rahul Gandhi&quot;,&quot;position&quot;:4,&quot;token&quot;:&quot;:tailored_request:entity_trend:taxi_region_source:tweet_count_10000_100000_metadescription:&quot;,&quot;id&quot;:&quot;-652527767436083369&quot;},{&quot;name&quot;:&quot;#Thalapathy63&quot;,&quot;item_type&quot;:8,&quot;item_query&quot;:&quot;#Thalapathy63&quot;,&quot;position&quot;:5,&quot;token&quot;:&quot;:tailored_request:hashtag_trend:taxi_worldwide_source:tweet_count_100000_1000000_metadescription:&quot;,&quot;id&quot;:&quot;-652527767436083369&quot;},{&quot;name&quot;:&quot;#DrunkenTigerxRM&quot;,&quot;item_type&quot;:8,&quot;item_query&quot;:&quot;#DrunkenTigerxRM&quot;,&quot;position&quot;:6,&quot;token&quot;:&quot;:tailored_request:hashtag_trend:taxi_worldwide_source:tweet_count_10000_100000_metadescription:&quot;,&quot;id&quot;:&quot;-652527767436083369&quot;},{&quot;name&quot;:&quot;#BeatODiabetes360&quot;,&quot;item_type&quot;:8,&quot;item_query&quot;:&quot;#BeatODiabetes360&quot;,&quot;position&quot;:7,&quot;token&quot;:&quot;:tailored_request:hashtag_trend:taxi_worldwide_source:tweet_count_1000_10000_metadescription:&quot;,&quot;id&quot;:&quot;-652527767436083369&quot;},{&quot;name&quot;:&quot;#SafeSiTiForChildren&quot;,&quot;item_type&quot;:8,&quot;item_query&quot;:&quot;#SafeSiTiForChildren&quot;,&quot;position&quot;:8,&quot;token&quot;:&quot;:tailored_request:hashtag_trend:taxi_worldwide_source:tweet_count_1000_10000_metadescription:&quot;,&quot;id&quot;:&quot;-652527767436083369&quot;},{&quot;name&quot;:&quot;Hyojong&quot;,&quot;item_type&quot;:8,&quot;item_query&quot;:&quot;Hyojong&quot;,&quot;position&quot;:9,&quot;token&quot;:&quot;:tailored_request:entity_trend:taxi_worldwide_source:tweet_count_1000_10000_metadescription:&quot;,&quot;id&quot;:&quot;-652527767436083369&quot;}],&quot;promoted&quot;:true,&quot;event_namespace&quot;:{&quot;client&quot;:&quot;web&quot;,&quot;page&quot;:&quot;home&quot;,&quot;section&quot;:&quot;home&quot;,&quot;component&quot;:&quot;trends&quot;,&quot;element&quot;:&quot;initial&quot;,&quot;action&quot;:&quot;results&quot;},&quot;triggered_on&quot;:1542196324562,&quot;format_version&quot;:2,&quot;_category_&quot;:&quot;client_event&quot;},{&quot;internal_referer&quot;:&quot;/login&quot;,&quot;client_version&quot;:&quot;macaw-swift&quot;,&quot;woeid&quot;:0,&quot;event_namespace&quot;:{&quot;client&quot;:&quot;web&quot;,&quot;page&quot;:&quot;home&quot;,&quot;section&quot;:&quot;home&quot;,&quot;component&quot;:&quot;trends&quot;,&quot;action&quot;:&quot;impression&quot;},&quot;triggered_on&quot;:1542196324563,&quot;format_version&quot;:2,&quot;_category_&quot;:&quot;client_event&quot;},{&quot;internal_referer&quot;:&quot;/login&quot;,&quot;client_version&quot;:&quot;macaw-swift&quot;,&quot;items&quot;:[{&quot;position&quot;:0,&quot;promoted_id&quot;:&quot;908063af24479f8&quot;,&quot;id&quot;:&quot;1115874631&quot;,&quot;item_type&quot;:3,&quot;token&quot;:&quot;38&quot;},{&quot;position&quot;:1,&quot;id&quot;:&quot;57741058&quot;,&quot;item_type&quot;:3,&quot;token&quot;:&quot;110&quot;},{&quot;position&quot;:2,&quot;id&quot;:&quot;101311381&quot;,&quot;item_type&quot;:3,&quot;token&quot;:&quot;117&quot;}],&quot;promoted&quot;:true,&quot;referring_event&quot;:&quot;initial&quot;,&quot;event_namespace&quot;:{&quot;client&quot;:&quot;web&quot;,&quot;page&quot;:&quot;home&quot;,&quot;section&quot;:&quot;home&quot;,&quot;component&quot;:&quot;user_recommendations&quot;,&quot;element&quot;:&quot;initial&quot;,&quot;action&quot;:&quot;results&quot;},&quot;triggered_on&quot;:1542196326106,&quot;format_version&quot;:2,&quot;_category_&quot;:&quot;client_event&quot;},{&quot;internal_referer&quot;:&quot;/login&quot;,&quot;client_version&quot;:&quot;macaw-swift&quot;,&quot;event_namespace&quot;:{&quot;client&quot;:&quot;web&quot;,&quot;page&quot;:&quot;home&quot;,&quot;section&quot;:&quot;home&quot;,&quot;component&quot;:&quot;user_recommendations&quot;,&quot;action&quot;:&quot;impression&quot;},&quot;triggered_on&quot;:1542196326106,&quot;format_version&quot;:2,&quot;_category_&quot;:&quot;client_event&quot;},{&quot;internal_referer&quot;:&quot;/login&quot;,&quot;client_version&quot;:&quot;macaw-swift&quot;,&quot;event_namespace&quot;:{&quot;client&quot;:&quot;web&quot;,&quot;page&quot;:&quot;home&quot;,&quot;section&quot;:&quot;home&quot;,&quot;component&quot;:&quot;promptbird_2419&quot;,&quot;action&quot;:&quot;impression&quot;},&quot;triggered_on&quot;:1542196326498,&quot;format_version&quot;:2,&quot;_category_&quot;:&quot;client_event&quot;},{&quot;product&quot;:&quot;webclient&quot;,&quot;description&quot;:&quot;stats:ajax:perf:swift_promoted_logger&quot;,&quot;duration_ms&quot;:4180,&quot;start_time_ms&quot;:1542196321189,&quot;metadata&quot;:&quot;{\&quot;url\&quot;:\&quot;/i/promoted_content/log.json\&quot;,\&quot;browser\&quot;:{\&quot;mozilla\&quot;:true,\&quot;version\&quot;:\&quot;11.0\&quot;,\&quot;name\&quot;:\&quot;mozilla\&quot;},\&quot;response_size\&quot;:2}&quot;,&quot;_category_&quot;:&quot;perftown&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">log</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port">80</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/i/jot</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.twitter.com/1.1/videos/tweet/config/1062461291955138561.json" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.twitter.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/1.1/videos/tweet/config/1062461291955138561.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname=":///i/direct_messages/typeahead" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port">80</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/i/direct_messages/typeahead</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://video.twimg.com/ext_tw_video/1062460730799198208/pu/pl/ZlNlCrVm4i8s3kwb.m3u8" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="tag" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">tag</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">video.twimg.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ext_tw_video/1062460730799198208/pu/pl/ZlNlCrVm4i8s3kwb.m3u8</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://twitter.com/i/timeline" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="composed_count" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">composed_count</stringProp>
                </elementProp>
                <elementProp name="include_available_features" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">include_available_features</stringProp>
                </elementProp>
                <elementProp name="include_entities" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">include_entities</stringProp>
                </elementProp>
                <elementProp name="include_new_items_bar" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">include_new_items_bar</stringProp>
                </elementProp>
                <elementProp name="interval" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">10000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">interval</stringProp>
                </elementProp>
                <elementProp name="latent_count" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">latent_count</stringProp>
                </elementProp>
                <elementProp name="min_position" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">1062461291955138561</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">min_position</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">twitter.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/i/timeline</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://twitter.com/i/users/prompts/click" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="authenticity_token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">db1965f5e15ef1367d1ea58e186f9ec21b2788ca</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">authenticity_token</stringProp>
                </elementProp>
                <elementProp name="prompt_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">2419</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">prompt_id</stringProp>
                </elementProp>
                <elementProp name="scribe_action" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">primary_cta</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">scribe_action</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">twitter.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/i/users/prompts/click</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://twitter.com/i/users/prompts/dismiss" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="authenticity_token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">db1965f5e15ef1367d1ea58e186f9ec21b2788ca</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">authenticity_token</stringProp>
                </elementProp>
                <elementProp name="prompt_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">2419</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">prompt_id</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">twitter.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/i/users/prompts/dismiss</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://twitter.com/i/jot" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="log" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">[{&quot;product&quot;:&quot;webclient&quot;,&quot;description&quot;:&quot;stats:ajax:perf:swift_promoted_logger&quot;,&quot;duration_ms&quot;:7232,&quot;start_time_ms&quot;:1542196321189,&quot;metadata&quot;:&quot;{\&quot;url\&quot;:\&quot;/i/promoted_content/log.json\&quot;,\&quot;browser\&quot;:{\&quot;mozilla\&quot;:true,\&quot;version\&quot;:\&quot;11.0\&quot;,\&quot;name\&quot;:\&quot;mozilla\&quot;},\&quot;response_size\&quot;:2}&quot;,&quot;_category_&quot;:&quot;perftown&quot;},{&quot;product&quot;:&quot;webclient&quot;,&quot;description&quot;:&quot;stats:ajax:perf:swift_promoted_logger&quot;,&quot;duration_ms&quot;:6092,&quot;start_time_ms&quot;:1542196321189,&quot;metadata&quot;:&quot;{\&quot;url\&quot;:\&quot;/i/promoted_content/log.json\&quot;,\&quot;browser\&quot;:{\&quot;mozilla\&quot;:true,\&quot;version\&quot;:\&quot;11.0\&quot;,\&quot;name\&quot;:\&quot;mozilla\&quot;},\&quot;response_size\&quot;:2}&quot;,&quot;_category_&quot;:&quot;perftown&quot;},{&quot;internal_referer&quot;:&quot;/login&quot;,&quot;client_version&quot;:&quot;macaw-swift&quot;,&quot;items&quot;:[{&quot;playlist_url&quot;:&quot;https://twitter.com/YouTube/status/1062461291955138561/video/1&quot;,&quot;media_asset_url&quot;:&quot;https://video.twimg.com/ext_tw_video/1062460730799198208/pu/pl/ZlNlCrVm4i8s3kwb.m3u8?tag=5&quot;,&quot;video_uuid&quot;:&quot;1062460730799198208&quot;,&quot;video_owner_id&quot;:&quot;10228272&quot;,&quot;video_type&quot;:&quot;video&quot;,&quot;content_id&quot;:&quot;1062460730799198208&quot;,&quot;item_type&quot;:&quot;0&quot;,&quot;id&quot;:&quot;1062461291955138561&quot;,&quot;publisher_id&quot;:&quot;10228272&quot;,&quot;media_session_id&quot;:&quot;3e75d7a9-2f84-4ef5-8d4d-033650142225&quot;,&quot;client_media_event&quot;:{&quot;media_client_event_type&quot;:{&quot;intent_to_play&quot;:{}},&quot;session_state&quot;:{&quot;session_id&quot;:&quot;3e75d7a9-2f84-4ef5-8d4d-033650142225&quot;,&quot;content_video_identifier&quot;:{&quot;media_platform_identifier&quot;:{&quot;media_category&quot;:7,&quot;media_id&quot;:&quot;1062460730799198208&quot;}},&quot;tweet_id&quot;:&quot;1062461291955138561&quot;},&quot;playing_media_state&quot;:{&quot;video_type&quot;:2,&quot;media_asset_url&quot;:&quot;https://video.twimg.com/ext_tw_video/1062460730799198208/pu/pl/ZlNlCrVm4i8s3kwb.m3u8?tag=5&quot;,&quot;media_metadata&quot;:{&quot;twitter_publisher_id&quot;:&quot;10228272&quot;,&quot;publisher_identifier&quot;:{&quot;twitter_publisher_identifier&quot;:{&quot;id&quot;:&quot;10228272&quot;}}}},&quot;player_state&quot;:{&quot;is_muted&quot;:false}},&quot;live_broadcast_details&quot;:{},&quot;live_video_event_details&quot;:{}}],&quot;event_namespace&quot;:{&quot;client&quot;:&quot;web&quot;,&quot;page&quot;:&quot;home&quot;,&quot;section&quot;:&quot;home&quot;,&quot;component&quot;:&quot;suggest_ranked_organic_tweet&quot;,&quot;element&quot;:&quot;video_player&quot;,&quot;action&quot;:&quot;intent_to_play&quot;},&quot;triggered_on&quot;:1542196334472,&quot;format_version&quot;:2,&quot;_category_&quot;:&quot;client_event&quot;},{&quot;internal_referer&quot;:&quot;/login&quot;,&quot;client_version&quot;:&quot;macaw-swift&quot;,&quot;items&quot;:[{&quot;playlist_url&quot;:&quot;https://twitter.com/YouTube/status/1062461291955138561/video/1&quot;,&quot;media_asset_url&quot;:&quot;https://video.twimg.com/ext_tw_video/1062460730799198208/pu/pl/ZlNlCrVm4i8s3kwb.m3u8?tag=5&quot;,&quot;video_uuid&quot;:&quot;1062460730799198208&quot;,&quot;video_owner_id&quot;:&quot;10228272&quot;,&quot;video_type&quot;:&quot;video&quot;,&quot;content_id&quot;:&quot;1062460730799198208&quot;,&quot;item_type&quot;:&quot;0&quot;,&quot;id&quot;:&quot;1062461291955138561&quot;,&quot;publisher_id&quot;:&quot;10228272&quot;,&quot;media_session_id&quot;:&quot;3e75d7a9-2f84-4ef5-8d4d-033650142225&quot;,&quot;client_media_event&quot;:{&quot;media_client_event_type&quot;:{&quot;mute&quot;:{}},&quot;session_state&quot;:{&quot;session_id&quot;:&quot;3e75d7a9-2f84-4ef5-8d4d-033650142225&quot;,&quot;content_video_identifier&quot;:{&quot;media_platform_identifier&quot;:{&quot;media_category&quot;:7,&quot;media_id&quot;:&quot;1062460730799198208&quot;}},&quot;tweet_id&quot;:&quot;1062461291955138561&quot;},&quot;playing_media_state&quot;:{&quot;video_type&quot;:2,&quot;media_asset_url&quot;:&quot;https://video.twimg.com/ext_tw_video/1062460730799198208/pu/pl/ZlNlCrVm4i8s3kwb.m3u8?tag=5&quot;,&quot;media_metadata&quot;:{&quot;twitter_publisher_id&quot;:&quot;10228272&quot;,&quot;publisher_identifier&quot;:{&quot;twitter_publisher_identifier&quot;:{&quot;id&quot;:&quot;10228272&quot;}}}},&quot;player_state&quot;:{&quot;is_muted&quot;:false}},&quot;live_broadcast_details&quot;:{},&quot;live_video_event_details&quot;:{}}],&quot;event_namespace&quot;:{&quot;client&quot;:&quot;web&quot;,&quot;page&quot;:&quot;home&quot;,&quot;section&quot;:&quot;home&quot;,&quot;component&quot;:&quot;suggest_ranked_organic_tweet&quot;,&quot;element&quot;:&quot;video_player&quot;,&quot;action&quot;:&quot;mute&quot;},&quot;triggered_on&quot;:1542196339299,&quot;format_version&quot;:2,&quot;_category_&quot;:&quot;client_event&quot;},{&quot;product&quot;:&quot;webclient&quot;,&quot;description&quot;:&quot;stats:ajax:perf:swift_home_timeline:polling&quot;,&quot;duration_ms&quot;:1045,&quot;start_time_ms&quot;:1542196321189,&quot;metadata&quot;:&quot;{\&quot;url\&quot;:\&quot;/i/timeline\&quot;,\&quot;browser\&quot;:{\&quot;mozilla\&quot;:true,\&quot;version\&quot;:\&quot;11.0\&quot;,\&quot;name\&quot;:\&quot;mozilla\&quot;},\&quot;response_size\&quot;:368}&quot;,&quot;_category_&quot;:&quot;perftown&quot;},{&quot;internal_referer&quot;:&quot;/login&quot;,&quot;client_version&quot;:&quot;macaw-swift&quot;,&quot;event_namespace&quot;:{&quot;client&quot;:&quot;web&quot;,&quot;page&quot;:&quot;home&quot;,&quot;section&quot;:&quot;home&quot;,&quot;component&quot;:&quot;promptbird_2419&quot;,&quot;action&quot;:&quot;click&quot;},&quot;triggered_on&quot;:1542196351900,&quot;format_version&quot;:2,&quot;_category_&quot;:&quot;client_event&quot;},{&quot;internal_referer&quot;:&quot;/login&quot;,&quot;client_version&quot;:&quot;macaw-swift&quot;,&quot;event_namespace&quot;:{&quot;client&quot;:&quot;web&quot;,&quot;page&quot;:&quot;home&quot;,&quot;section&quot;:&quot;home&quot;,&quot;component&quot;:&quot;promptbird_2419&quot;,&quot;action&quot;:&quot;dismiss&quot;},&quot;triggered_on&quot;:1542196352132,&quot;format_version&quot;:2,&quot;_category_&quot;:&quot;client_event&quot;},{&quot;internal_referer&quot;:&quot;/login&quot;,&quot;client_version&quot;:&quot;macaw-swift&quot;,&quot;items&quot;:[{&quot;playlist_url&quot;:&quot;https://twitter.com/YouTube/status/1062461291955138561/video/1&quot;,&quot;media_asset_url&quot;:&quot;https://video.twimg.com/ext_tw_video/1062460730799198208/pu/pl/ZlNlCrVm4i8s3kwb.m3u8?tag=5&quot;,&quot;video_uuid&quot;:&quot;1062460730799198208&quot;,&quot;video_owner_id&quot;:&quot;10228272&quot;,&quot;video_type&quot;:&quot;video&quot;,&quot;content_id&quot;:&quot;1062460730799198208&quot;,&quot;item_type&quot;:&quot;0&quot;,&quot;id&quot;:&quot;1062461291955138561&quot;,&quot;publisher_id&quot;:&quot;10228272&quot;,&quot;media_session_id&quot;:&quot;3e75d7a9-2f84-4ef5-8d4d-033650142225&quot;,&quot;client_media_event&quot;:{&quot;media_client_event_type&quot;:{&quot;playback_startup_error&quot;:{&quot;latency_millis&quot;:16085,&quot;error&quot;:{&quot;is_fatal&quot;:true,&quot;category&quot;:&quot;PLAYBACK_ERROR&quot;,&quot;message&quot;:&quot;networkError:manifestLoadTimeOut&quot;,&quot;retry_count&quot;:1}}},&quot;session_state&quot;:{&quot;session_id&quot;:&quot;3e75d7a9-2f84-4ef5-8d4d-033650142225&quot;,&quot;content_video_identifier&quot;:{&quot;media_platform_identifier&quot;:{&quot;media_category&quot;:7,&quot;media_id&quot;:&quot;1062460730799198208&quot;}},&quot;tweet_id&quot;:&quot;1062461291955138561&quot;},&quot;playing_media_state&quot;:{&quot;video_type&quot;:2,&quot;media_asset_url&quot;:&quot;https://video.twimg.com/ext_tw_video/1062460730799198208/pu/pl/ZlNlCrVm4i8s3kwb.m3u8?tag=5&quot;,&quot;media_metadata&quot;:{&quot;twitter_publisher_id&quot;:&quot;10228272&quot;,&quot;publisher_identifier&quot;:{&quot;twitter_publisher_identifier&quot;:{&quot;id&quot;:&quot;10228272&quot;}}}},&quot;player_state&quot;:{&quot;is_muted&quot;:true}},&quot;latency&quot;:16085,&quot;error_code&quot;:&quot;PLAYBACK_ERROR&quot;,&quot;error_message&quot;:&quot;networkError:manifestLoadTimeOut&quot;,&quot;media_details&quot;:{&quot;media_error&quot;:{&quot;category&quot;:&quot;PLAYBACK_ERROR&quot;,&quot;is_fatal&quot;:true,&quot;message&quot;:&quot;networkError:manifestLoadTimeOut&quot;,&quot;retry_count&quot;:1}},&quot;live_broadcast_details&quot;:{},&quot;live_video_event_details&quot;:{}}],&quot;event_namespace&quot;:{&quot;client&quot;:&quot;web&quot;,&quot;page&quot;:&quot;home&quot;,&quot;section&quot;:&quot;home&quot;,&quot;component&quot;:&quot;suggest_ranked_organic_tweet&quot;,&quot;element&quot;:&quot;video_player&quot;,&quot;action&quot;:&quot;playback_startup_error&quot;},&quot;triggered_on&quot;:1542196355381,&quot;format_version&quot;:2,&quot;_category_&quot;:&quot;client_event&quot;},{&quot;internal_referer&quot;:&quot;/login&quot;,&quot;client_version&quot;:&quot;macaw-swift&quot;,&quot;items&quot;:[{&quot;playlist_url&quot;:&quot;https://twitter.com/YouTube/status/1062461291955138561/video/1&quot;,&quot;media_asset_url&quot;:&quot;https://video.twimg.com/ext_tw_video/1062460730799198208/pu/pl/ZlNlCrVm4i8s3kwb.m3u8?tag=5&quot;,&quot;video_uuid&quot;:&quot;1062460730799198208&quot;,&quot;video_owner_id&quot;:&quot;10228272&quot;,&quot;video_type&quot;:&quot;video&quot;,&quot;content_id&quot;:&quot;1062460730799198208&quot;,&quot;item_type&quot;:&quot;0&quot;,&quot;id&quot;:&quot;1062461291955138561&quot;,&quot;publisher_id&quot;:&quot;10228272&quot;,&quot;media_session_id&quot;:&quot;3e75d7a9-2f84-4ef5-8d4d-033650142225&quot;,&quot;client_media_event&quot;:{&quot;media_client_event_type&quot;:{&quot;error&quot;:{&quot;is_fatal&quot;:true,&quot;category&quot;:&quot;PLAYBACK_ERROR&quot;,&quot;message&quot;:&quot;networkError:manifestLoadTimeOut&quot;,&quot;retry_count&quot;:1}},&quot;session_state&quot;:{&quot;session_id&quot;:&quot;3e75d7a9-2f84-4ef5-8d4d-033650142225&quot;,&quot;content_video_identifier&quot;:{&quot;media_platform_identifier&quot;:{&quot;media_category&quot;:7,&quot;media_id&quot;:&quot;1062460730799198208&quot;}},&quot;tweet_id&quot;:&quot;1062461291955138561&quot;},&quot;playing_media_state&quot;:{&quot;video_type&quot;:2,&quot;media_asset_url&quot;:&quot;https://video.twimg.com/ext_tw_video/1062460730799198208/pu/pl/ZlNlCrVm4i8s3kwb.m3u8?tag=5&quot;,&quot;media_metadata&quot;:{&quot;twitter_publisher_id&quot;:&quot;10228272&quot;,&quot;publisher_identifier&quot;:{&quot;twitter_publisher_identifier&quot;:{&quot;id&quot;:&quot;10228272&quot;}}}},&quot;player_state&quot;:{&quot;is_muted&quot;:true}},&quot;error_code&quot;:&quot;PLAYBACK_ERROR&quot;,&quot;error_message&quot;:&quot;networkError:manifestLoadTimeOut&quot;,&quot;media_details&quot;:{&quot;media_error&quot;:{&quot;category&quot;:&quot;PLAYBACK_ERROR&quot;,&quot;is_fatal&quot;:true,&quot;message&quot;:&quot;networkError:manifestLoadTimeOut&quot;,&quot;retry_count&quot;:1}},&quot;live_broadcast_details&quot;:{},&quot;live_video_event_details&quot;:{}}],&quot;event_namespace&quot;:{&quot;client&quot;:&quot;web&quot;,&quot;page&quot;:&quot;home&quot;,&quot;section&quot;:&quot;home&quot;,&quot;component&quot;:&quot;suggest_ranked_organic_tweet&quot;,&quot;element&quot;:&quot;video_player&quot;,&quot;action&quot;:&quot;error&quot;},&quot;triggered_on&quot;:1542196355382,&quot;format_version&quot;:2,&quot;_category_&quot;:&quot;client_event&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">log</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">twitter.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/i/jot</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.twitter.com/1.1/videos/tweet/config/1062461291955138561.json" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.twitter.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/1.1/videos/tweet/config/1062461291955138561.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://video.twimg.com/ext_tw_video/1062460730799198208/pu/pl/ZlNlCrVm4i8s3kwb.m3u8" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="tag" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">tag</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">video.twimg.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ext_tw_video/1062460730799198208/pu/pl/ZlNlCrVm4i8s3kwb.m3u8</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://twitter.com/i/timeline" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="composed_count" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">composed_count</stringProp>
                </elementProp>
                <elementProp name="include_available_features" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">include_available_features</stringProp>
                </elementProp>
                <elementProp name="include_entities" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">include_entities</stringProp>
                </elementProp>
                <elementProp name="include_new_items_bar" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">include_new_items_bar</stringProp>
                </elementProp>
                <elementProp name="interval" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">10000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">interval</stringProp>
                </elementProp>
                <elementProp name="latent_count" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">latent_count</stringProp>
                </elementProp>
                <elementProp name="min_position" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">1062461291955138561</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">min_position</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">twitter.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/i/timeline</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://twitter.com/i/search/typeahead.json" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="count" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">10</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">count</stringProp>
                </elementProp>
                <elementProp name="filters" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">filters</stringProp>
                </elementProp>
                <elementProp name="q" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">s</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">q</stringProp>
                </elementProp>
                <elementProp name="result_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">topics,users</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">result_type</stringProp>
                </elementProp>
                <elementProp name="src" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">SEARCH_BOX</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">src</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">twitter.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/i/search/typeahead.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://twitter.com/i/search/typeahead.json" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="count" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">10</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">count</stringProp>
                </elementProp>
                <elementProp name="filters" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">filters</stringProp>
                </elementProp>
                <elementProp name="q" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">sr</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">q</stringProp>
                </elementProp>
                <elementProp name="result_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">topics,users</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">result_type</stringProp>
                </elementProp>
                <elementProp name="src" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">SEARCH_BOX</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">src</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">twitter.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/i/search/typeahead.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://twitter.com/search" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="q" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">srk</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">q</stringProp>
                </elementProp>
                <elementProp name="src" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">tyah</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">src</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">twitter.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/search</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.twitter.com/1.1/videos/tweet/config/1062461291955138561.json" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.twitter.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/1.1/videos/tweet/config/1062461291955138561.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://twitter.com/i/trends" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="k" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">7fdbae39f9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">k</stringProp>
                </elementProp>
                <elementProp name="pc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">pc</stringProp>
                </elementProp>
                <elementProp name="query" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">srk</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">query</stringProp>
                </elementProp>
                <elementProp name="show_context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">show_context</stringProp>
                </elementProp>
                <elementProp name="src" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">module</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">src</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">twitter.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/i/trends</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://twitter.com/i/users/recommendations" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="connections" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">connections</stringProp>
                </elementProp>
                <elementProp name="dismissable" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">dismissable</stringProp>
                </elementProp>
                <elementProp name="display_context_query" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">srk</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">display_context_query</stringProp>
                </elementProp>
                <elementProp name="display_location" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">search-sidebar</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">display_location</stringProp>
                </elementProp>
                <elementProp name="excluded" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">113419517,135421739,132385468,71201743</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">excluded</stringProp>
                </elementProp>
                <elementProp name="initialResults" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">initialResults</stringProp>
                </elementProp>
                <elementProp name="limit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">limit</stringProp>
                </elementProp>
                <elementProp name="pc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">pc</stringProp>
                </elementProp>
                <elementProp name="scribeContext[component]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">user_recommendations</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">scribeContext[component]</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">twitter.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/i/users/recommendations</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://twitter.com/i/search/typeahead.json" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="count" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">10</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">count</stringProp>
                </elementProp>
                <elementProp name="filters" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">filters</stringProp>
                </elementProp>
                <elementProp name="q" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">srk</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">q</stringProp>
                </elementProp>
                <elementProp name="result_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">topics,users</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">result_type</stringProp>
                </elementProp>
                <elementProp name="src" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">SEARCH_BOX</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">src</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">twitter.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/i/search/typeahead.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.twitter.com/1.1/videos/tweet/config/1062017604318101505.json" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.twitter.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/1.1/videos/tweet/config/1062017604318101505.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname=":///i/promoted_content/log.json" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port">80</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/i/promoted_content/log.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://twitter.com/i/jot" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="log" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">[{&quot;internal_referer&quot;:&quot;/login&quot;,&quot;client_version&quot;:&quot;macaw-swift&quot;,&quot;items&quot;:[{&quot;playlist_url&quot;:&quot;https://twitter.com/YouTube/status/1062461291955138561/video/1&quot;,&quot;media_asset_url&quot;:&quot;https://video.twimg.com/ext_tw_video/1062460730799198208/pu/pl/ZlNlCrVm4i8s3kwb.m3u8?tag=5&quot;,&quot;video_uuid&quot;:&quot;1062460730799198208&quot;,&quot;video_owner_id&quot;:&quot;10228272&quot;,&quot;video_type&quot;:&quot;video&quot;,&quot;content_id&quot;:&quot;1062460730799198208&quot;,&quot;item_type&quot;:&quot;0&quot;,&quot;id&quot;:&quot;1062461291955138561&quot;,&quot;publisher_id&quot;:&quot;10228272&quot;,&quot;media_session_id&quot;:&quot;3e75d7a9-2f84-4ef5-8d4d-033650142225&quot;,&quot;client_media_event&quot;:{&quot;media_client_event_type&quot;:{&quot;mute&quot;:{}},&quot;session_state&quot;:{&quot;session_id&quot;:&quot;3e75d7a9-2f84-4ef5-8d4d-033650142225&quot;,&quot;content_video_identifier&quot;:{&quot;media_platform_identifier&quot;:{&quot;media_category&quot;:7,&quot;media_id&quot;:&quot;1062460730799198208&quot;}},&quot;tweet_id&quot;:&quot;1062461291955138561&quot;},&quot;playing_media_state&quot;:{&quot;video_type&quot;:2,&quot;media_asset_url&quot;:&quot;https://video.twimg.com/ext_tw_video/1062460730799198208/pu/pl/ZlNlCrVm4i8s3kwb.m3u8?tag=5&quot;,&quot;media_metadata&quot;:{&quot;twitter_publisher_id&quot;:&quot;10228272&quot;,&quot;publisher_identifier&quot;:{&quot;twitter_publisher_identifier&quot;:{&quot;id&quot;:&quot;10228272&quot;}}}},&quot;player_state&quot;:{&quot;is_muted&quot;:false}},&quot;live_broadcast_details&quot;:{},&quot;live_video_event_details&quot;:{}}],&quot;event_namespace&quot;:{&quot;client&quot;:&quot;web&quot;,&quot;page&quot;:&quot;home&quot;,&quot;section&quot;:&quot;home&quot;,&quot;component&quot;:&quot;suggest_ranked_organic_tweet&quot;,&quot;element&quot;:&quot;video_player&quot;,&quot;action&quot;:&quot;mute&quot;},&quot;triggered_on&quot;:1542196366910,&quot;format_version&quot;:2,&quot;_category_&quot;:&quot;client_event&quot;},{&quot;product&quot;:&quot;webclient&quot;,&quot;description&quot;:&quot;stats:ajax:perf:swift_home_timeline:polling&quot;,&quot;duration_ms&quot;:755,&quot;start_time_ms&quot;:1542196321189,&quot;metadata&quot;:&quot;{\&quot;url\&quot;:\&quot;/i/timeline\&quot;,\&quot;browser\&quot;:{\&quot;mozilla\&quot;:true,\&quot;version\&quot;:\&quot;11.0\&quot;,\&quot;name\&quot;:\&quot;mozilla\&quot;},\&quot;response_size\&quot;:368}&quot;,&quot;_category_&quot;:&quot;perftown&quot;},{&quot;internal_referer&quot;:&quot;/login&quot;,&quot;client_version&quot;:&quot;macaw-swift&quot;,&quot;event_namespace&quot;:{&quot;client&quot;:&quot;web&quot;,&quot;page&quot;:&quot;home&quot;,&quot;section&quot;:&quot;home&quot;,&quot;component&quot;:&quot;top_bar_searchbox&quot;,&quot;element&quot;:&quot;&quot;,&quot;action&quot;:&quot;focus_field&quot;},&quot;triggered_on&quot;:1542196373966,&quot;format_version&quot;:2,&quot;_category_&quot;:&quot;client_event&quot;},{&quot;internal_referer&quot;:&quot;/login&quot;,&quot;client_version&quot;:&quot;macaw-swift&quot;,&quot;message&quot;:&quot;sr&quot;,&quot;items&quot;:[{&quot;item_query&quot;:&quot;srk&quot;,&quot;item_type&quot;:12,&quot;position&quot;:0}],&quot;format_version&quot;:2,&quot;event_namespace&quot;:{&quot;client&quot;:&quot;web&quot;,&quot;page&quot;:&quot;home&quot;,&quot;section&quot;:&quot;home&quot;,&quot;component&quot;:&quot;top_bar_searchbox&quot;,&quot;element&quot;:&quot;typeahead&quot;,&quot;action&quot;:&quot;search&quot;},&quot;triggered_on&quot;:1542196377784,&quot;_category_&quot;:&quot;client_event&quot;},{&quot;internal_referer&quot;:&quot;/login&quot;,&quot;client_version&quot;:&quot;macaw-swift&quot;,&quot;items&quot;:[{&quot;playlist_url&quot;:&quot;https://twitter.com/YouTube/status/1062461291955138561/video/1&quot;,&quot;media_asset_url&quot;:&quot;https://video.twimg.com/ext_tw_video/1062460730799198208/pu/pl/ZlNlCrVm4i8s3kwb.m3u8?tag=5&quot;,&quot;video_uuid&quot;:&quot;1062460730799198208&quot;,&quot;video_owner_id&quot;:&quot;10228272&quot;,&quot;video_type&quot;:&quot;video&quot;,&quot;content_id&quot;:&quot;1062460730799198208&quot;,&quot;item_type&quot;:&quot;0&quot;,&quot;id&quot;:&quot;1062461291955138561&quot;,&quot;publisher_id&quot;:&quot;10228272&quot;,&quot;media_session_id&quot;:&quot;3e75d7a9-2f84-4ef5-8d4d-033650142225&quot;,&quot;client_media_event&quot;:{&quot;media_client_event_type&quot;:{&quot;error&quot;:{&quot;is_fatal&quot;:true,&quot;category&quot;:&quot;PLAYBACK_ERROR&quot;,&quot;message&quot;:&quot;networkError:manifestLoadTimeOut&quot;,&quot;retry_count&quot;:2}},&quot;session_state&quot;:{&quot;session_id&quot;:&quot;3e75d7a9-2f84-4ef5-8d4d-033650142225&quot;,&quot;content_video_identifier&quot;:{&quot;media_platform_identifier&quot;:{&quot;media_category&quot;:7,&quot;media_id&quot;:&quot;1062460730799198208&quot;}},&quot;tweet_id&quot;:&quot;1062461291955138561&quot;},&quot;playing_media_state&quot;:{&quot;video_type&quot;:2,&quot;media_asset_url&quot;:&quot;https://video.twimg.com/ext_tw_video/1062460730799198208/pu/pl/ZlNlCrVm4i8s3kwb.m3u8?tag=5&quot;,&quot;media_metadata&quot;:{&quot;twitter_publisher_id&quot;:&quot;10228272&quot;,&quot;publisher_identifier&quot;:{&quot;twitter_publisher_identifier&quot;:{&quot;id&quot;:&quot;10228272&quot;}}}},&quot;player_state&quot;:{&quot;is_muted&quot;:true}},&quot;error_code&quot;:&quot;PLAYBACK_ERROR&quot;,&quot;error_message&quot;:&quot;networkError:manifestLoadTimeOut&quot;,&quot;media_details&quot;:{&quot;media_error&quot;:{&quot;category&quot;:&quot;PLAYBACK_ERROR&quot;,&quot;is_fatal&quot;:true,&quot;message&quot;:&quot;networkError:manifestLoadTimeOut&quot;,&quot;retry_count&quot;:2}},&quot;live_broadcast_details&quot;:{},&quot;live_video_event_details&quot;:{}}],&quot;event_namespace&quot;:{&quot;client&quot;:&quot;web&quot;,&quot;page&quot;:&quot;home&quot;,&quot;section&quot;:&quot;home&quot;,&quot;component&quot;:&quot;suggest_ranked_organic_tweet&quot;,&quot;element&quot;:&quot;video_player&quot;,&quot;action&quot;:&quot;error&quot;},&quot;triggered_on&quot;:1542196379103,&quot;format_version&quot;:2,&quot;_category_&quot;:&quot;client_event&quot;},{&quot;product&quot;:&quot;webclient&quot;,&quot;description&quot;:&quot;stats:ajax:perf:partner_id_sync&quot;,&quot;duration_ms&quot;:0,&quot;start_time_ms&quot;:1542196321189,&quot;metadata&quot;:&quot;{\&quot;url\&quot;:\&quot;https://analytics.twitter.com/tpm/p\&quot;,\&quot;browser\&quot;:{\&quot;mozilla\&quot;:true,\&quot;version\&quot;:\&quot;11.0\&quot;,\&quot;name\&quot;:\&quot;mozilla\&quot;}}&quot;,&quot;_category_&quot;:&quot;perftown&quot;},{&quot;internal_referer&quot;:&quot;/&quot;,&quot;client_version&quot;:&quot;macaw-swift&quot;,&quot;search_details&quot;:{&quot;query&quot;:&quot;srk&quot;,&quot;query_source&quot;:&quot;tyah&quot;},&quot;event_namespace&quot;:{&quot;client&quot;:&quot;web&quot;,&quot;page&quot;:&quot;search&quot;,&quot;section&quot;:&quot;default&quot;,&quot;component&quot;:&quot;user_recommendations&quot;,&quot;element&quot;:&quot;wtf_import_prompt&quot;,&quot;action&quot;:&quot;impression&quot;},&quot;triggered_on&quot;:1542196385290,&quot;format_version&quot;:2,&quot;_category_&quot;:&quot;client_event&quot;},{&quot;internal_referer&quot;:&quot;/&quot;,&quot;client_version&quot;:&quot;macaw-swift&quot;,&quot;search_details&quot;:{&quot;query&quot;:&quot;srk&quot;,&quot;query_source&quot;:&quot;tyah&quot;},&quot;event_namespace&quot;:{&quot;client&quot;:&quot;web&quot;,&quot;page&quot;:&quot;search&quot;,&quot;section&quot;:&quot;default&quot;,&quot;action&quot;:&quot;show&quot;},&quot;triggered_on&quot;:1542196385460,&quot;format_version&quot;:2,&quot;_category_&quot;:&quot;client_event&quot;},{&quot;internal_referer&quot;:&quot;/&quot;,&quot;client_version&quot;:&quot;macaw-swift&quot;,&quot;search_details&quot;:{&quot;query&quot;:&quot;srk&quot;,&quot;query_source&quot;:&quot;tyah&quot;},&quot;event_namespace&quot;:{&quot;client&quot;:&quot;web&quot;,&quot;page&quot;:&quot;search&quot;,&quot;section&quot;:&quot;default&quot;,&quot;component&quot;:&quot;top_bar_searchbox&quot;,&quot;element&quot;:&quot;&quot;,&quot;action&quot;:&quot;focus_field&quot;},&quot;triggered_on&quot;:1542196386136,&quot;format_version&quot;:2,&quot;_category_&quot;:&quot;client_event&quot;},{&quot;internal_referer&quot;:&quot;/&quot;,&quot;client_version&quot;:&quot;macaw-swift&quot;,&quot;search_details&quot;:{&quot;query&quot;:&quot;srk&quot;,&quot;query_source&quot;:&quot;tyah&quot;},&quot;woeid&quot;:0,&quot;referring_event&quot;:&quot;initial&quot;,&quot;items&quot;:[{&quot;name&quot;:&quot;#OPPOF9Pro&quot;,&quot;item_type&quot;:8,&quot;item_query&quot;:&quot;#OPPOF9Pro&quot;,&quot;position&quot;:0,&quot;id&quot;:&quot;3614320413826016509&quot;,&quot;promoted_id&quot;:60314},{&quot;name&quot;:&quot;#ChildrensDay&quot;,&quot;item_type&quot;:8,&quot;item_query&quot;:&quot;#ChildrensDay&quot;,&quot;position&quot;:1,&quot;token&quot;:&quot;:tailored_request:hashtag_trend:taxi_worldwide_source:tweet_count_100000_1000000_metadescription:&quot;,&quot;id&quot;:&quot;3614320413826016509&quot;},{&quot;name&quot;:&quot;Stan Lee&quot;,&quot;item_type&quot;:8,&quot;item_query&quot;:&quot;Stan Lee&quot;,&quot;position&quot;:2,&quot;token&quot;:&quot;:tailored_request:entity_trend:taxi_region_source:tweet_count_1000000_10000000_metadescription:&quot;,&quot;id&quot;:&quot;3614320413826016509&quot;},{&quot;name&quot;:&quot;#JawaharlalNehru&quot;,&quot;item_type&quot;:8,&quot;item_query&quot;:&quot;#JawaharlalNehru&quot;,&quot;position&quot;:3,&quot;token&quot;:&quot;:tailored_request:hashtag_trend:taxi_worldwide_source:tweet_count_10000_100000_metadescription:&quot;,&quot;id&quot;:&quot;3614320413826016509&quot;},{&quot;name&quot;:&quot;Rahul Gandhi&quot;,&quot;item_type&quot;:8,&quot;item_query&quot;:&quot;Rahul Gandhi&quot;,&quot;position&quot;:4,&quot;token&quot;:&quot;:tailored_request:entity_trend:taxi_region_source:tweet_count_10000_100000_metadescription:&quot;,&quot;id&quot;:&quot;3614320413826016509&quot;},{&quot;name&quot;:&quot;#Thalapathy63&quot;,&quot;item_type&quot;:8,&quot;item_query&quot;:&quot;#Thalapathy63&quot;,&quot;position&quot;:5,&quot;token&quot;:&quot;:tailored_request:hashtag_trend:taxi_worldwide_source:tweet_count_100000_1000000_metadescription:&quot;,&quot;id&quot;:&quot;3614320413826016509&quot;},{&quot;name&quot;:&quot;#DrunkenTigerxRM&quot;,&quot;item_type&quot;:8,&quot;item_query&quot;:&quot;#DrunkenTigerxRM&quot;,&quot;position&quot;:6,&quot;token&quot;:&quot;:tailored_request:hashtag_trend:taxi_worldwide_source:tweet_count_10000_100000_metadescription:&quot;,&quot;id&quot;:&quot;3614320413826016509&quot;},{&quot;name&quot;:&quot;#BeatODiabetes360&quot;,&quot;item_type&quot;:8,&quot;item_query&quot;:&quot;#BeatODiabetes360&quot;,&quot;position&quot;:7,&quot;token&quot;:&quot;:tailored_request:hashtag_trend:taxi_worldwide_source:tweet_count_1000_10000_metadescription:&quot;,&quot;id&quot;:&quot;3614320413826016509&quot;},{&quot;name&quot;:&quot;#SafeSiTiForChildren&quot;,&quot;item_type&quot;:8,&quot;item_query&quot;:&quot;#SafeSiTiForChildren&quot;,&quot;position&quot;:8,&quot;token&quot;:&quot;:tailored_request:hashtag_trend:taxi_worldwide_source:tweet_count_1000_10000_metadescription:&quot;,&quot;id&quot;:&quot;3614320413826016509&quot;},{&quot;name&quot;:&quot;Hyojong&quot;,&quot;item_type&quot;:8,&quot;item_query&quot;:&quot;Hyojong&quot;,&quot;position&quot;:9,&quot;token&quot;:&quot;:tailored_request:entity_trend:taxi_worldwide_source:tweet_count_1000_10000_metadescription:&quot;,&quot;id&quot;:&quot;3614320413826016509&quot;}],&quot;promoted&quot;:true,&quot;event_namespace&quot;:{&quot;client&quot;:&quot;web&quot;,&quot;page&quot;:&quot;search&quot;,&quot;section&quot;:&quot;default&quot;,&quot;component&quot;:&quot;trends&quot;,&quot;element&quot;:&quot;initial&quot;,&quot;action&quot;:&quot;results&quot;},&quot;triggered_on&quot;:1542196386465,&quot;format_version&quot;:2,&quot;_category_&quot;:&quot;client_event&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">log</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">twitter.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/i/jot</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://twitter.com/i/promoted_content/log.json" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="authenticity_token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">db1965f5e15ef1367d1ea58e186f9ec21b2788ca</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">authenticity_token</stringProp>
                </elementProp>
                <elementProp name="event" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">impression</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">event</stringProp>
                </elementProp>
                <elementProp name="impression_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">908273f62ea6d2c</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">impression_id</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">twitter.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/i/promoted_content/log.json</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://video.twimg.com/ext_tw_video/1062017535644758016/pu/pl/M3pUfuEn2ZPFZXTc.m3u8" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="tag" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">tag</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">video.twimg.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ext_tw_video/1062017535644758016/pu/pl/M3pUfuEn2ZPFZXTc.m3u8</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://twitter.com/i/search/typeahead.json" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="count" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">10</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">count</stringProp>
                </elementProp>
                <elementProp name="filters" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">filters</stringProp>
                </elementProp>
                <elementProp name="q" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">srk</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">q</stringProp>
                </elementProp>
                <elementProp name="result_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">topics,users</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">result_type</stringProp>
                </elementProp>
                <elementProp name="src" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">SEARCH_BOX</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">src</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">twitter.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/i/search/typeahead.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://twitter.com/i/search/typeahead.json" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="count" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">10</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">count</stringProp>
                </elementProp>
                <elementProp name="filters" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">filters</stringProp>
                </elementProp>
                <elementProp name="q" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">srk</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">q</stringProp>
                </elementProp>
                <elementProp name="result_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">topics,users</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">result_type</stringProp>
                </elementProp>
                <elementProp name="src" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">SEARCH_BOX</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">src</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">twitter.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/i/search/typeahead.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://twitter.com/i/search/typeahead.json" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="count" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">10</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">count</stringProp>
                </elementProp>
                <elementProp name="filters" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">filters</stringProp>
                </elementProp>
                <elementProp name="q" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">sr</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">q</stringProp>
                </elementProp>
                <elementProp name="result_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">topics,users</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">result_type</stringProp>
                </elementProp>
                <elementProp name="src" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">SEARCH_BOX</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">src</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">twitter.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/i/search/typeahead.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://twitter.com/SrBachchan" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">twitter.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/SrBachchan</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://twitter.com/i/trends" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="k" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">7fdbae39f9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">k</stringProp>
                </elementProp>
                <elementProp name="pc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">pc</stringProp>
                </elementProp>
                <elementProp name="profileUserId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">145125358</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">profileUserId</stringProp>
                </elementProp>
                <elementProp name="show_context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">show_context</stringProp>
                </elementProp>
                <elementProp name="src" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">module</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">src</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">twitter.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/i/trends</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://twitter.com/i/profiles/show/SrBachchan/media_timeline" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="for_photo_rail" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">for_photo_rail</stringProp>
                </elementProp>
                <elementProp name="oldest_unread_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">oldest_unread_id</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">twitter.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/i/profiles/show/SrBachchan/media_timeline</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://twitter.com/i/jot" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="log" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">[{&quot;internal_referer&quot;:&quot;/&quot;,&quot;client_version&quot;:&quot;macaw-swift&quot;,&quot;search_details&quot;:{&quot;query&quot;:&quot;srk&quot;,&quot;query_source&quot;:&quot;tyah&quot;},&quot;woeid&quot;:0,&quot;event_namespace&quot;:{&quot;client&quot;:&quot;web&quot;,&quot;page&quot;:&quot;search&quot;,&quot;section&quot;:&quot;default&quot;,&quot;component&quot;:&quot;trends&quot;,&quot;action&quot;:&quot;impression&quot;},&quot;triggered_on&quot;:1542196386472,&quot;format_version&quot;:2,&quot;_category_&quot;:&quot;client_event&quot;},{&quot;internal_referer&quot;:&quot;/&quot;,&quot;client_version&quot;:&quot;macaw-swift&quot;,&quot;search_details&quot;:{&quot;query&quot;:&quot;srk&quot;,&quot;query_source&quot;:&quot;tyah&quot;},&quot;items&quot;:[{&quot;position&quot;:0,&quot;promoted_id&quot;:&quot;908273f62ea6d2c&quot;,&quot;id&quot;:&quot;1115874631&quot;,&quot;item_type&quot;:3,&quot;token&quot;:&quot;38&quot;},{&quot;position&quot;:1,&quot;id&quot;:&quot;101311381&quot;,&quot;item_type&quot;:3,&quot;token&quot;:&quot;551&quot;},{&quot;position&quot;:2,&quot;id&quot;:&quot;128829414&quot;,&quot;item_type&quot;:3,&quot;token&quot;:&quot;551&quot;}],&quot;promoted&quot;:true,&quot;referring_event&quot;:&quot;initial&quot;,&quot;event_namespace&quot;:{&quot;client&quot;:&quot;web&quot;,&quot;page&quot;:&quot;search&quot;,&quot;section&quot;:&quot;default&quot;,&quot;component&quot;:&quot;user_recommendations&quot;,&quot;element&quot;:&quot;initial&quot;,&quot;action&quot;:&quot;results&quot;},&quot;triggered_on&quot;:1542196387010,&quot;format_version&quot;:2,&quot;_category_&quot;:&quot;client_event&quot;},{&quot;internal_referer&quot;:&quot;/&quot;,&quot;client_version&quot;:&quot;macaw-swift&quot;,&quot;search_details&quot;:{&quot;query&quot;:&quot;srk&quot;,&quot;query_source&quot;:&quot;tyah&quot;},&quot;event_namespace&quot;:{&quot;client&quot;:&quot;web&quot;,&quot;page&quot;:&quot;search&quot;,&quot;section&quot;:&quot;default&quot;,&quot;component&quot;:&quot;user_recommendations&quot;,&quot;action&quot;:&quot;impression&quot;},&quot;triggered_on&quot;:1542196387010,&quot;format_version&quot;:2,&quot;_category_&quot;:&quot;client_event&quot;},{&quot;product&quot;:&quot;webclient&quot;,&quot;description&quot;:&quot;stats:ajax:perf:swift_promoted_logger&quot;,&quot;duration_ms&quot;:1615,&quot;start_time_ms&quot;:1542196321189,&quot;metadata&quot;:&quot;{\&quot;url\&quot;:\&quot;/i/promoted_content/log.json\&quot;,\&quot;browser\&quot;:{\&quot;mozilla\&quot;:true,\&quot;version\&quot;:\&quot;11.0\&quot;,\&quot;name\&quot;:\&quot;mozilla\&quot;},\&quot;response_size\&quot;:2}&quot;,&quot;_category_&quot;:&quot;perftown&quot;},{&quot;product&quot;:&quot;webclient&quot;,&quot;description&quot;:&quot;stats:ajax:perf:swift_promoted_logger&quot;,&quot;duration_ms&quot;:2361,&quot;start_time_ms&quot;:1542196321189,&quot;metadata&quot;:&quot;{\&quot;url\&quot;:\&quot;/i/promoted_content/log.json\&quot;,\&quot;browser\&quot;:{\&quot;mozilla\&quot;:true,\&quot;version\&quot;:\&quot;11.0\&quot;,\&quot;name\&quot;:\&quot;mozilla\&quot;},\&quot;response_size\&quot;:2}&quot;,&quot;_category_&quot;:&quot;perftown&quot;},{&quot;internal_referer&quot;:&quot;/&quot;,&quot;client_version&quot;:&quot;macaw-swift&quot;,&quot;search_details&quot;:{&quot;query&quot;:&quot;srk&quot;,&quot;query_source&quot;:&quot;tyah&quot;},&quot;event_namespace&quot;:{&quot;client&quot;:&quot;web&quot;,&quot;page&quot;:&quot;search&quot;,&quot;section&quot;:&quot;default&quot;,&quot;component&quot;:&quot;top_bar_searchbox&quot;,&quot;element&quot;:&quot;&quot;,&quot;action&quot;:&quot;focus_field&quot;},&quot;triggered_on&quot;:1542196393355,&quot;format_version&quot;:2,&quot;_category_&quot;:&quot;client_event&quot;},{&quot;internal_referer&quot;:&quot;/&quot;,&quot;client_version&quot;:&quot;macaw-swift&quot;,&quot;search_details&quot;:{&quot;query&quot;:&quot;srk&quot;,&quot;query_source&quot;:&quot;tyah&quot;},&quot;event_namespace&quot;:{&quot;client&quot;:&quot;web&quot;,&quot;page&quot;:&quot;search&quot;,&quot;section&quot;:&quot;default&quot;,&quot;component&quot;:&quot;top_bar_searchbox&quot;,&quot;element&quot;:&quot;&quot;,&quot;action&quot;:&quot;focus_field&quot;},&quot;triggered_on&quot;:1542196395699,&quot;format_version&quot;:2,&quot;_category_&quot;:&quot;client_event&quot;},{&quot;internal_referer&quot;:&quot;/&quot;,&quot;client_version&quot;:&quot;macaw-swift&quot;,&quot;search_details&quot;:{&quot;query&quot;:&quot;srk&quot;,&quot;query_source&quot;:&quot;tyah&quot;},&quot;event_namespace&quot;:{&quot;client&quot;:&quot;web&quot;,&quot;page&quot;:&quot;search&quot;,&quot;section&quot;:&quot;default&quot;,&quot;component&quot;:&quot;top_bar_searchbox&quot;,&quot;element&quot;:&quot;&quot;,&quot;action&quot;:&quot;focus_field&quot;},&quot;triggered_on&quot;:1542196396479,&quot;format_version&quot;:2,&quot;_category_&quot;:&quot;client_event&quot;},{&quot;internal_referer&quot;:&quot;/&quot;,&quot;client_version&quot;:&quot;macaw-swift&quot;,&quot;search_details&quot;:{&quot;query&quot;:&quot;srk&quot;,&quot;query_source&quot;:&quot;tyah&quot;},&quot;event_namespace&quot;:{&quot;client&quot;:&quot;web&quot;,&quot;page&quot;:&quot;search&quot;,&quot;section&quot;:&quot;default&quot;,&quot;component&quot;:&quot;top_bar_searchbox&quot;,&quot;element&quot;:&quot;&quot;,&quot;action&quot;:&quot;focus_field&quot;},&quot;triggered_on&quot;:1542196397199,&quot;format_version&quot;:2,&quot;_category_&quot;:&quot;client_event&quot;},{&quot;internal_referer&quot;:&quot;/&quot;,&quot;client_version&quot;:&quot;macaw-swift&quot;,&quot;search_details&quot;:{&quot;query&quot;:&quot;srk&quot;,&quot;query_source&quot;:&quot;tyah&quot;},&quot;event_namespace&quot;:{&quot;client&quot;:&quot;web&quot;,&quot;page&quot;:&quot;search&quot;,&quot;section&quot;:&quot;default&quot;,&quot;component&quot;:&quot;top_bar_searchbox&quot;,&quot;element&quot;:&quot;&quot;,&quot;action&quot;:&quot;focus_field&quot;},&quot;triggered_on&quot;:1542196397882,&quot;format_version&quot;:2,&quot;_category_&quot;:&quot;client_event&quot;},{&quot;internal_referer&quot;:&quot;/&quot;,&quot;client_version&quot;:&quot;macaw-swift&quot;,&quot;search_details&quot;:{&quot;query&quot;:&quot;srk&quot;,&quot;query_source&quot;:&quot;tyah&quot;},&quot;message&quot;:&quot;sr&quot;,&quot;items&quot;:[{&quot;id&quot;:&quot;145125358&quot;,&quot;item_type&quot;:3,&quot;position&quot;:0}],&quot;format_version&quot;:2,&quot;event_info&quot;:&quot;prefetched&quot;,&quot;event_namespace&quot;:{&quot;client&quot;:&quot;web&quot;,&quot;page&quot;:&quot;search&quot;,&quot;section&quot;:&quot;default&quot;,&quot;component&quot;:&quot;top_bar_searchbox&quot;,&quot;element&quot;:&quot;typeahead&quot;,&quot;action&quot;:&quot;profile_click&quot;},&quot;triggered_on&quot;:1542196402156,&quot;_category_&quot;:&quot;client_event&quot;},{&quot;product&quot;:&quot;webclient&quot;,&quot;description&quot;:&quot;stats:ajax:perf:partner_id_sync&quot;,&quot;duration_ms&quot;:1,&quot;start_time_ms&quot;:1542196321189,&quot;metadata&quot;:&quot;{\&quot;url\&quot;:\&quot;https://analytics.twitter.com/tpm/p\&quot;,\&quot;browser\&quot;:{\&quot;mozilla\&quot;:true,\&quot;version\&quot;:\&quot;11.0\&quot;,\&quot;name\&quot;:\&quot;mozilla\&quot;}}&quot;,&quot;_category_&quot;:&quot;perftown&quot;},{&quot;internal_referer&quot;:&quot;/search?q=srk&amp;src=tyah&quot;,&quot;client_version&quot;:&quot;macaw-swift&quot;,&quot;event_namespace&quot;:{&quot;client&quot;:&quot;web&quot;,&quot;page&quot;:&quot;profile&quot;,&quot;section&quot;:&quot;profile&quot;,&quot;component&quot;:&quot;user_recommendations&quot;,&quot;element&quot;:&quot;wtf_import_prompt&quot;,&quot;action&quot;:&quot;impression&quot;},&quot;triggered_on&quot;:1542196406758,&quot;format_version&quot;:2,&quot;_category_&quot;:&quot;client_event&quot;},{&quot;internal_referer&quot;:&quot;/search?q=srk&amp;src=tyah&quot;,&quot;client_version&quot;:&quot;macaw-swift&quot;,&quot;profile_id&quot;:145125358,&quot;business_profile&quot;:false,&quot;event_namespace&quot;:{&quot;client&quot;:&quot;web&quot;,&quot;page&quot;:&quot;profile&quot;,&quot;section&quot;:&quot;profile&quot;,&quot;component&quot;:&quot;profile_heading&quot;,&quot;element&quot;:&quot;tweets_toggle&quot;,&quot;action&quot;:&quot;impression&quot;},&quot;triggered_on&quot;:1542196406819,&quot;format_version&quot;:2,&quot;_category_&quot;:&quot;client_event&quot;},{&quot;internal_referer&quot;:&quot;/search?q=srk&amp;src=tyah&quot;,&quot;client_version&quot;:&quot;macaw-swift&quot;,&quot;profile_id&quot;:145125358,&quot;business_profile&quot;:false,&quot;event_namespace&quot;:{&quot;client&quot;:&quot;web&quot;,&quot;page&quot;:&quot;profile&quot;,&quot;section&quot;:&quot;profile&quot;,&quot;component&quot;:&quot;profile_heading&quot;,&quot;element&quot;:&quot;tweets_with_replies_toggle&quot;,&quot;action&quot;:&quot;impression&quot;},&quot;triggered_on&quot;:1542196406819,&quot;format_version&quot;:2,&quot;_category_&quot;:&quot;client_event&quot;},{&quot;internal_referer&quot;:&quot;/search?q=srk&amp;src=tyah&quot;,&quot;client_version&quot;:&quot;macaw-swift&quot;,&quot;profile_id&quot;:145125358,&quot;business_profile&quot;:false,&quot;event_namespace&quot;:{&quot;client&quot;:&quot;web&quot;,&quot;page&quot;:&quot;profile&quot;,&quot;section&quot;:&quot;profile&quot;,&quot;component&quot;:&quot;profile_heading&quot;,&quot;element&quot;:&quot;photos_and_videos_toggle&quot;,&quot;action&quot;:&quot;impression&quot;},&quot;triggered_on&quot;:1542196406819,&quot;format_version&quot;:2,&quot;_category_&quot;:&quot;client_event&quot;},{&quot;internal_referer&quot;:&quot;/search?q=srk&amp;src=tyah&quot;,&quot;client_version&quot;:&quot;macaw-swift&quot;,&quot;profile_id&quot;:145125358,&quot;business_profile&quot;:false,&quot;event_namespace&quot;:{&quot;client&quot;:&quot;web&quot;,&quot;page&quot;:&quot;profile&quot;,&quot;section&quot;:&quot;profile&quot;,&quot;component&quot;:&quot;profile_follow_card&quot;,&quot;element&quot;:&quot;social_proof&quot;,&quot;action&quot;:&quot;impression&quot;},&quot;triggered_on&quot;:1542196406822,&quot;format_version&quot;:2,&quot;_category_&quot;:&quot;client_event&quot;},{&quot;internal_referer&quot;:&quot;/search?q=srk&amp;src=tyah&quot;,&quot;client_version&quot;:&quot;macaw-swift&quot;,&quot;profile_id&quot;:145125358,&quot;business_profile&quot;:false,&quot;event_namespace&quot;:{&quot;client&quot;:&quot;web&quot;,&quot;page&quot;:&quot;profile&quot;,&quot;section&quot;:&quot;profile&quot;,&quot;component&quot;:&quot;dashboard_media&quot;,&quot;action&quot;:&quot;no_results&quot;},&quot;triggered_on&quot;:1542196406824,&quot;format_version&quot;:2,&quot;_category_&quot;:&quot;client_event&quot;},{&quot;internal_referer&quot;:&quot;/search?q=srk&amp;src=tyah&quot;,&quot;client_version&quot;:&quot;macaw-swift&quot;,&quot;profile_id&quot;:145125358,&quot;business_profile&quot;:false,&quot;event_namespace&quot;:{&quot;client&quot;:&quot;web&quot;,&quot;page&quot;:&quot;profile&quot;,&quot;section&quot;:&quot;profile&quot;,&quot;action&quot;:&quot;show&quot;},&quot;triggered_on&quot;:1542196406994,&quot;format_version&quot;:2,&quot;_category_&quot;:&quot;client_event&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">log</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">twitter.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/i/jot</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://twitter.com/i/users/recommendations" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="connections" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">connections</stringProp>
                </elementProp>
                <elementProp name="dismissable" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">dismissable</stringProp>
                </elementProp>
                <elementProp name="display_location" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">profile-sidebar</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">display_location</stringProp>
                </elementProp>
                <elementProp name="excluded" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">113419517,135421739,132385468,71201743</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">excluded</stringProp>
                </elementProp>
                <elementProp name="initialResults" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">initialResults</stringProp>
                </elementProp>
                <elementProp name="limit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">limit</stringProp>
                </elementProp>
                <elementProp name="oldest_unread_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">oldest_unread_id</stringProp>
                </elementProp>
                <elementProp name="pc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">pc</stringProp>
                </elementProp>
                <elementProp name="scribeContext[component]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">user_recommendations</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">scribeContext[component]</stringProp>
                </elementProp>
                <elementProp name="similar_to_user_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">145125358</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">similar_to_user_id</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">twitter.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/i/users/recommendations</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://twitter.com/i/profiles/show/SrBachchan/timeline/tweets" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="composed_count" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">composed_count</stringProp>
                </elementProp>
                <elementProp name="include_available_features" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">include_available_features</stringProp>
                </elementProp>
                <elementProp name="include_entities" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">include_entities</stringProp>
                </elementProp>
                <elementProp name="include_new_items_bar" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">include_new_items_bar</stringProp>
                </elementProp>
                <elementProp name="interval" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">30000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">interval</stringProp>
                </elementProp>
                <elementProp name="latent_count" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">latent_count</stringProp>
                </elementProp>
                <elementProp name="min_position" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">1062433969772220416</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">min_position</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">twitter.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/i/profiles/show/SrBachchan/timeline/tweets</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://twitter.com/i/profiles/show/SrBachchan/timeline/tweets" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="composed_count" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">composed_count</stringProp>
                </elementProp>
                <elementProp name="include_available_features" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">include_available_features</stringProp>
                </elementProp>
                <elementProp name="include_entities" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">include_entities</stringProp>
                </elementProp>
                <elementProp name="include_new_items_bar" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">include_new_items_bar</stringProp>
                </elementProp>
                <elementProp name="interval" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">30000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">interval</stringProp>
                </elementProp>
                <elementProp name="latent_count" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">latent_count</stringProp>
                </elementProp>
                <elementProp name="min_position" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">1062433969772220416</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">min_position</stringProp>
                </elementProp>
                <elementProp name="oldest_unread_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">oldest_unread_id</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">twitter.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/i/profiles/show/SrBachchan/timeline/tweets</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://twitter.com/i/profiles/show/SrBachchan/timeline/tweets" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="composed_count" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">composed_count</stringProp>
                </elementProp>
                <elementProp name="include_available_features" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">include_available_features</stringProp>
                </elementProp>
                <elementProp name="include_entities" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">include_entities</stringProp>
                </elementProp>
                <elementProp name="include_new_items_bar" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">include_new_items_bar</stringProp>
                </elementProp>
                <elementProp name="interval" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">30000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">interval</stringProp>
                </elementProp>
                <elementProp name="latent_count" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">latent_count</stringProp>
                </elementProp>
                <elementProp name="min_position" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">1062433969772220416</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">min_position</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">twitter.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/i/profiles/show/SrBachchan/timeline/tweets</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://twitter.com/i/jot" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="log" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">[{&quot;internal_referer&quot;:&quot;/search?q=srk&amp;src=tyah&quot;,&quot;client_version&quot;:&quot;macaw-swift&quot;,&quot;profile_id&quot;:145125358,&quot;business_profile&quot;:false,&quot;woeid&quot;:0,&quot;referring_event&quot;:&quot;initial&quot;,&quot;items&quot;:[{&quot;name&quot;:&quot;#ChildrensDay&quot;,&quot;item_type&quot;:8,&quot;item_query&quot;:&quot;#ChildrensDay&quot;,&quot;position&quot;:0,&quot;token&quot;:&quot;:tailored_request:hashtag_trend:taxi_worldwide_source:tweet_count_100000_1000000_metadescription:&quot;,&quot;id&quot;:&quot;6556786969020690084&quot;},{&quot;name&quot;:&quot;Stan Lee&quot;,&quot;item_type&quot;:8,&quot;item_query&quot;:&quot;Stan Lee&quot;,&quot;position&quot;:1,&quot;token&quot;:&quot;:tailored_request:entity_trend:taxi_region_source:tweet_count_1000000_10000000_metadescription:&quot;,&quot;id&quot;:&quot;6556786969020690084&quot;},{&quot;name&quot;:&quot;#JawaharlalNehru&quot;,&quot;item_type&quot;:8,&quot;item_query&quot;:&quot;#JawaharlalNehru&quot;,&quot;position&quot;:2,&quot;token&quot;:&quot;:tailored_request:hashtag_trend:taxi_worldwide_source:tweet_count_10000_100000_metadescription:&quot;,&quot;id&quot;:&quot;6556786969020690084&quot;},{&quot;name&quot;:&quot;Rahul Gandhi&quot;,&quot;item_type&quot;:8,&quot;item_query&quot;:&quot;Rahul Gandhi&quot;,&quot;position&quot;:3,&quot;token&quot;:&quot;:tailored_request:entity_trend:taxi_region_source:tweet_count_10000_100000_metadescription:&quot;,&quot;id&quot;:&quot;6556786969020690084&quot;},{&quot;name&quot;:&quot;#Thalapathy63&quot;,&quot;item_type&quot;:8,&quot;item_query&quot;:&quot;#Thalapathy63&quot;,&quot;position&quot;:4,&quot;token&quot;:&quot;:tailored_request:hashtag_trend:taxi_worldwide_source:tweet_count_100000_1000000_metadescription:&quot;,&quot;id&quot;:&quot;6556786969020690084&quot;},{&quot;name&quot;:&quot;#DrunkenTigerxRM&quot;,&quot;item_type&quot;:8,&quot;item_query&quot;:&quot;#DrunkenTigerxRM&quot;,&quot;position&quot;:5,&quot;token&quot;:&quot;:tailored_request:hashtag_trend:taxi_worldwide_source:tweet_count_10000_100000_metadescription:&quot;,&quot;id&quot;:&quot;6556786969020690084&quot;},{&quot;name&quot;:&quot;#BeatODiabetes360&quot;,&quot;item_type&quot;:8,&quot;item_query&quot;:&quot;#BeatODiabetes360&quot;,&quot;position&quot;:6,&quot;token&quot;:&quot;:tailored_request:hashtag_trend:taxi_worldwide_source:tweet_count_1000_10000_metadescription:&quot;,&quot;id&quot;:&quot;6556786969020690084&quot;},{&quot;name&quot;:&quot;#SafeSiTiForChildren&quot;,&quot;item_type&quot;:8,&quot;item_query&quot;:&quot;#SafeSiTiForChildren&quot;,&quot;position&quot;:7,&quot;token&quot;:&quot;:tailored_request:hashtag_trend:taxi_worldwide_source:tweet_count_1000_10000_metadescription:&quot;,&quot;id&quot;:&quot;6556786969020690084&quot;},{&quot;name&quot;:&quot;Hyojong&quot;,&quot;item_type&quot;:8,&quot;item_query&quot;:&quot;Hyojong&quot;,&quot;position&quot;:8,&quot;token&quot;:&quot;:tailored_request:entity_trend:taxi_worldwide_source:tweet_count_1000_10000_metadescription:&quot;,&quot;id&quot;:&quot;6556786969020690084&quot;},{&quot;name&quot;:&quot;Mike Pence&quot;,&quot;item_type&quot;:8,&quot;item_query&quot;:&quot;Mike Pence&quot;,&quot;position&quot;:9,&quot;token&quot;:&quot;:tailored_request:entity_trend:taxi_country_source:tweet_count_1000_10000_metadescription:&quot;,&quot;id&quot;:&quot;6556786969020690084&quot;}],&quot;event_namespace&quot;:{&quot;client&quot;:&quot;web&quot;,&quot;page&quot;:&quot;profile&quot;,&quot;section&quot;:&quot;profile&quot;,&quot;component&quot;:&quot;trends&quot;,&quot;element&quot;:&quot;initial&quot;,&quot;action&quot;:&quot;results&quot;},&quot;triggered_on&quot;:1542196414024,&quot;format_version&quot;:2,&quot;_category_&quot;:&quot;client_event&quot;},{&quot;internal_referer&quot;:&quot;/search?q=srk&amp;src=tyah&quot;,&quot;client_version&quot;:&quot;macaw-swift&quot;,&quot;profile_id&quot;:145125358,&quot;business_profile&quot;:false,&quot;woeid&quot;:0,&quot;event_namespace&quot;:{&quot;client&quot;:&quot;web&quot;,&quot;page&quot;:&quot;profile&quot;,&quot;section&quot;:&quot;profile&quot;,&quot;component&quot;:&quot;trends&quot;,&quot;action&quot;:&quot;impression&quot;},&quot;triggered_on&quot;:1542196414025,&quot;format_version&quot;:2,&quot;_category_&quot;:&quot;client_event&quot;},{&quot;internal_referer&quot;:&quot;/search?q=srk&amp;src=tyah&quot;,&quot;client_version&quot;:&quot;macaw-swift&quot;,&quot;profile_id&quot;:145125358,&quot;business_profile&quot;:false,&quot;items&quot;:[{&quot;position&quot;:0,&quot;id&quot;:&quot;101311381&quot;,&quot;item_type&quot;:3,&quot;token&quot;:&quot;131&quot;},{&quot;position&quot;:1,&quot;id&quot;:&quot;87170183&quot;,&quot;item_type&quot;:3,&quot;token&quot;:&quot;131&quot;},{&quot;position&quot;:2,&quot;id&quot;:&quot;18839785&quot;,&quot;item_type&quot;:3,&quot;token&quot;:&quot;131&quot;}],&quot;referring_event&quot;:&quot;initial&quot;,&quot;event_namespace&quot;:{&quot;client&quot;:&quot;web&quot;,&quot;page&quot;:&quot;profile&quot;,&quot;section&quot;:&quot;profile&quot;,&quot;component&quot;:&quot;user_recommendations&quot;,&quot;element&quot;:&quot;initial&quot;,&quot;action&quot;:&quot;results&quot;},&quot;triggered_on&quot;:1542196414065,&quot;format_version&quot;:2,&quot;_category_&quot;:&quot;client_event&quot;},{&quot;internal_referer&quot;:&quot;/search?q=srk&amp;src=tyah&quot;,&quot;client_version&quot;:&quot;macaw-swift&quot;,&quot;profile_id&quot;:145125358,&quot;business_profile&quot;:false,&quot;event_namespace&quot;:{&quot;client&quot;:&quot;web&quot;,&quot;page&quot;:&quot;profile&quot;,&quot;section&quot;:&quot;profile&quot;,&quot;component&quot;:&quot;user_recommendations&quot;,&quot;action&quot;:&quot;impression&quot;},&quot;triggered_on&quot;:1542196414065,&quot;format_version&quot;:2,&quot;_category_&quot;:&quot;client_event&quot;},{&quot;internal_referer&quot;:&quot;/search?q=srk&amp;src=tyah&quot;,&quot;client_version&quot;:&quot;macaw-swift&quot;,&quot;profile_id&quot;:145125358,&quot;business_profile&quot;:false,&quot;event_namespace&quot;:{&quot;client&quot;:&quot;web&quot;,&quot;page&quot;:&quot;profile&quot;,&quot;section&quot;:&quot;profile&quot;,&quot;component&quot;:&quot;dashboard_nav&quot;,&quot;element&quot;:&quot;tweets&quot;,&quot;action&quot;:&quot;navigate&quot;},&quot;triggered_on&quot;:1542196414904,&quot;format_version&quot;:2,&quot;_category_&quot;:&quot;client_event&quot;},{&quot;internal_referer&quot;:&quot;/search?q=srk&amp;src=tyah&quot;,&quot;client_version&quot;:&quot;macaw-swift&quot;,&quot;profile_id&quot;:145125358,&quot;business_profile&quot;:false,&quot;items&quot;:[{&quot;name&quot;:&quot;https://pbs.twimg.com/media/Dr6F5lAUUAAGX_N.jpg&quot;},{&quot;name&quot;:&quot;https://pbs.twimg.com/media/Dr6F9pVU8AE27NB.jpg&quot;},{&quot;name&quot;:&quot;https://pbs.twimg.com/media/Dr6GAGzU0AAc18g.jpg&quot;},{&quot;name&quot;:&quot;https://pbs.twimg.com/media/Dr6GChxVsAAnqCn.jpg&quot;},{&quot;name&quot;:&quot;https://pbs.twimg.com/media/Dr6BqqVU4AAKnIG.jpg&quot;},{&quot;name&quot;:&quot;https://pbs.twimg.com/media/DrvsqhEVsAAmg49.jpg&quot;}],&quot;event_namespace&quot;:{&quot;client&quot;:&quot;web&quot;,&quot;page&quot;:&quot;profile&quot;,&quot;section&quot;:&quot;profile&quot;,&quot;component&quot;:&quot;dashboard_media&quot;,&quot;action&quot;:&quot;results&quot;},&quot;triggered_on&quot;:1542196417444,&quot;format_version&quot;:2,&quot;_category_&quot;:&quot;client_event&quot;},{&quot;internal_referer&quot;:&quot;/search?q=srk&amp;src=tyah&quot;,&quot;client_version&quot;:&quot;macaw-swift&quot;,&quot;profile_id&quot;:145125358,&quot;business_profile&quot;:false,&quot;items&quot;:[{&quot;name&quot;:&quot;https://pbs.twimg.com/media/Dr6F5lAUUAAGX_N.jpg&quot;},{&quot;name&quot;:&quot;https://pbs.twimg.com/media/Dr6F9pVU8AE27NB.jpg&quot;},{&quot;name&quot;:&quot;https://pbs.twimg.com/media/Dr6GAGzU0AAc18g.jpg&quot;},{&quot;name&quot;:&quot;https://pbs.twimg.com/media/Dr6GChxVsAAnqCn.jpg&quot;},{&quot;name&quot;:&quot;https://pbs.twimg.com/media/Dr6BqqVU4AAKnIG.jpg&quot;},{&quot;name&quot;:&quot;https://pbs.twimg.com/media/DrvsqhEVsAAmg49.jpg&quot;}],&quot;event_namespace&quot;:{&quot;client&quot;:&quot;web&quot;,&quot;page&quot;:&quot;profile&quot;,&quot;section&quot;:&quot;profile&quot;,&quot;component&quot;:&quot;dashboard_media&quot;,&quot;action&quot;:&quot;results&quot;},&quot;triggered_on&quot;:1542196417446,&quot;format_version&quot;:2,&quot;_category_&quot;:&quot;client_event&quot;},{&quot;product&quot;:&quot;webclient&quot;,&quot;description&quot;:&quot;stats:ajax:perf:swift_profile_tweets:polling&quot;,&quot;duration_ms&quot;:2569,&quot;start_time_ms&quot;:1542196321189,&quot;metadata&quot;:&quot;{\&quot;url\&quot;:\&quot;/i/profiles/show/SrBachchan/timeline/tweets\&quot;,\&quot;browser\&quot;:{\&quot;mozilla\&quot;:true,\&quot;version\&quot;:\&quot;11.0\&quot;,\&quot;name\&quot;:\&quot;mozilla\&quot;},\&quot;response_size\&quot;:351}&quot;,&quot;_category_&quot;:&quot;perftown&quot;},{&quot;product&quot;:&quot;webclient&quot;,&quot;description&quot;:&quot;stats:ajax:perf:swift_profile_tweets:polling&quot;,&quot;duration_ms&quot;:956,&quot;start_time_ms&quot;:1542196321189,&quot;metadata&quot;:&quot;{\&quot;url\&quot;:\&quot;/i/profiles/show/SrBachchan/timeline/tweets\&quot;,\&quot;browser\&quot;:{\&quot;mozilla\&quot;:true,\&quot;version\&quot;:\&quot;11.0\&quot;,\&quot;name\&quot;:\&quot;mozilla\&quot;},\&quot;response_size\&quot;:348}&quot;,&quot;_category_&quot;:&quot;perftown&quot;},{&quot;product&quot;:&quot;webclient&quot;,&quot;description&quot;:&quot;stats:ajax:perf:swift_profile_tweets:polling&quot;,&quot;duration_ms&quot;:704,&quot;start_time_ms&quot;:1542196321189,&quot;metadata&quot;:&quot;{\&quot;url\&quot;:\&quot;/i/profiles/show/SrBachchan/timeline/tweets\&quot;,\&quot;browser\&quot;:{\&quot;mozilla\&quot;:true,\&quot;version\&quot;:\&quot;11.0\&quot;,\&quot;name\&quot;:\&quot;mozilla\&quot;},\&quot;response_size\&quot;:351}&quot;,&quot;_category_&quot;:&quot;perftown&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">log</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">twitter.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/i/jot</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://twitter.com/i/profiles/show/SrBachchan/timeline/tweets" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="composed_count" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">composed_count</stringProp>
                </elementProp>
                <elementProp name="include_available_features" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">include_available_features</stringProp>
                </elementProp>
                <elementProp name="include_entities" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">include_entities</stringProp>
                </elementProp>
                <elementProp name="include_new_items_bar" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">include_new_items_bar</stringProp>
                </elementProp>
                <elementProp name="interval" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">30000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">interval</stringProp>
                </elementProp>
                <elementProp name="latent_count" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">latent_count</stringProp>
                </elementProp>
                <elementProp name="min_position" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">1062433969772220416</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">min_position</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">twitter.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/i/profiles/show/SrBachchan/timeline/tweets</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://twitter.com/i/profiles/show/SrBachchan/timeline/tweets" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="composed_count" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">composed_count</stringProp>
                </elementProp>
                <elementProp name="include_available_features" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">include_available_features</stringProp>
                </elementProp>
                <elementProp name="include_entities" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">include_entities</stringProp>
                </elementProp>
                <elementProp name="include_new_items_bar" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">include_new_items_bar</stringProp>
                </elementProp>
                <elementProp name="interval" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">30000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">interval</stringProp>
                </elementProp>
                <elementProp name="latent_count" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">latent_count</stringProp>
                </elementProp>
                <elementProp name="min_position" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">1062433969772220416</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">min_position</stringProp>
                </elementProp>
                <elementProp name="oldest_unread_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">oldest_unread_id</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">twitter.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/i/profiles/show/SrBachchan/timeline/tweets</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
